buildscript {
    ext.kotlin_version = '1.3.61'
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.10.0"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.61"
    id "java"
    id "maven"
    id 'org.jetbrains.dokka' version '0.10.0'
}

group   = GROUP_NAME
version = VERSION_NAME
archivesBaseName = ARTIFACT_BASE_NAME

description = "AutomationCentral-365"

sourceCompatibility = 1.8
targetCompatibility = sourceCompatibility

def junit5Version = '5.5.1'
def mainClass = "com.amcentral365.service.MainKt"

repositories {
    mavenLocal()
    maven { url "http://repo.maven.apache.org/maven2" }
}

dokka {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "$targetCompatibility"
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}

// Integration tests ----
sourceSets {
    testIT {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}
configurations {
    testITImplementation.extendsFrom implementation
    testITRuntimeOnly.extendsFrom runtimeOnly
}
task testITTask(type: Test) {
    useJUnitPlatform()
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.testIT.output.classesDirs
    classpath       = sourceSets.testIT.runtimeClasspath
    shouldRunAfter test

    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}
check.dependsOn testITTask
// end of IT

jar {   // the uber jar
    manifest {
        attributes "Main-Class": mainClass
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


dependencies {
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'

    compile group: 'org.jetbrains.kotlin',   name: 'kotlin-stdlib-jdk8'
    compile group: 'com.google.guava',       name: 'guava',                version: '27.0.1-jre'   // Guava
    compile group: 'com.sparkjava',          name: 'spark-core',           version: '2.7.2'        // Web framework
    compile group: 'org.mariadb.jdbc',       name: 'mariadb-java-client',  version: '2.4.1'        // DB driver
    compile group: 'com.amcentral365',       name: 'pl4kotlin',            version: '0.3.12'       // ORM layer
    compile group: 'io.github.microutils',   name: 'kotlin-logging',       version: '1.5.4'        // Logging
    compile group: 'org.slf4j',              name: 'slf4j-log4j12',        version: '1.7.26'       // Logging
    compile group: 'com.google.code.gson',   name: 'gson',                 version: '2.8.5'        // JSON
    compile group: 'com.github.ajalt',       name: 'clikt',                version: '2.0.0'        // Command line arg parser
    compile group: 'org.glassfish.external', name: 'jsch',                 version: '0.1.55'       // SSH2
  //compile group: 'org.eclipse.jgit',       name: 'org.eclipse.jgit',     version: '5.5.1.201910021850-r'  // Git

    // Test dependencies: Unit
    testCompile group: 'org.junit.jupiter',    name: 'junit-jupiter-engine', version: junit5Version
    testCompile group: 'org.junit.jupiter',    name: 'junit-jupiter-api',    version: junit5Version
    testCompile group: 'org.junit.jupiter',    name: 'junit-jupiter-params', version: junit5Version
    testCompile group: 'io.mockk',             name: 'mockk',                version:'1.8.7'

    // Test dependencies: Integration
    testITImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api',    version: junit5Version
    testITRuntimeOnly    group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junit5Version
}
