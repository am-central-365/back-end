components:
  requestBodies:
    create_role:
      description: A role object, see table ROLES.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              role_name:   {type: string, maximum: 100, required: true}
              class:       {type: string, maximum: 100}
              role_schema: {type: object, required: true, description: "schema definition"}
              description: {type: string, maximum: 64000}
    update_role:
      description: A role object, see table ROLES.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              class:       {type: string, maximum: 100}
              role_schema: {type: object, description: "schema definition"}
              description: {type: string, maximum: 64000}
              modified_ts: {type: string, format:  timestamp, required: true} #, description: "OptLock value, gets overwritten by the database"


root:
  get:
    tags: [Core - Roles]
    summary: Get list of roles and optionally their attributes
    produces: [application/json]
    parameters:
    - { in: query, name: field,     schema: {type: string}, description: "for each object, return the specified field, typically name"}
    - { in: query, name: fields,    schema: {type: string}, description: "comma-separated list of filed names to retrieve. Can't be mixed with 'field'"}
    - { in: query, name: skip,      schema: {type: integer, default: 0}, description: "Number of items to skip"}
    - { in: query, name: limit,     schema: {type: integer, default: 0}, description: "Limit the number of items returned. 0 for no limit."}
    responses: { allOf: [{$ref: '../amcentral365.yml#/components/responses/read_resource'}] }

  post:
    tags: [Core - Roles]
    summary: Create a role object
    description: modified_ts is ignored. Returns PK + Optimistic Lock

    requestBody: { $ref: '#/components/requestBodies/create_role' }
    responses:   { allOf: [{$ref: '../amcentral365.yml#/components/responses/create_resource'}] }


$role_name:
  get:
    summary: Get a role object
    tags: [Core - Roles]
    produces: [application/json]
    responses: { allOf: [{$ref: '../amcentral365.yml#/components/responses/read_resource'}] }

    parameters:
    - { in: path, name: role_name, required: true, schema: {type: string, maximum: 100}, description: "name of the role to query"}

  post:
    tags: [Core - Roles]
    summary: Update a role object
    description: Only specified fields are updated. Returns PK + Optimistic Lock

    parameters:
    - { in: path, name: role_name, required: true, schema: {type: string, maximum: 100}, description: "name of the role to update"}
    requestBody: { $ref: '#/components/requestBodies/update_role' }
    responses:   { allOf: [{$ref: '../amcentral365.yml#/components/responses/update_resource'}] }

  delete:
    summary: Delete a role object
    tags: [Core - Roles]
    produces: application/json]
    parameters:
    - { in: path,  name: role_name,   required: true, schema: {type: string, maximum: 100}, description: "name of the role to delete"}
    - { in: query, name: modified_ts, required: true, schema: {type: string, format: timestamp}, description: "The OptLock value, as obtained by GET"}

    # NB: DELETE, GET, and HEAD have no body as per RFC 7231
    #requestBody: { $ref: '#/components/requestBodies/delete_role' }
    responses:   { allOf: [{$ref: '../amcentral365.yml#/components/responses/delete_resource'}] }
